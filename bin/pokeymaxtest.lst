mads 2.1.6
    84 					opt l+
   119
   120 				.print 'ZPAGE: ',zpage,'..',zpend-1
   120 				ZPAGE: $0080..$00D3
   121
   122 				.print 'RTLIB: ',RTLIB,'..',*-1
   122 				RTLIB: $21FF..$22DE
   123
   124 				; ------------------------------------------------------------
   125
   126 22DF			START
   127 22DF BA				tsx
   128 22E0 8E FE 25			stx MAIN.@halt+1
   129
   130 = 002D			VLEN	= VARDATASIZE-VARINITSIZE
   131 = 2622			VADR	= DATAORIGIN+VARINITSIZE
   132
   133 					ift VADR > $BFFF
   134 					ert 'Invalid memory address range ',VADR
   135 					eli (VLEN>0) && (VLEN<=256)
   136 22E3 A2 D3			ldx #256-VLEN
   137 22E5 A9 00			lda #$00
   138 22E7 9D 4F 25 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   139 					eli VLEN>256
   140 					@fill #VADR #VLEN #$00
   141 					eif
   142
   143 				.ifdef :psptr
   144 					mwa #PROGRAMSTACK :psptr
   145 				.fi
   146
   147 					.ifdef MAIN.@DEFINES.ROMOFF
   148 					icl 'atari\romoff.asm'
   149 					.fi
   150
   151 22ED A2 0F			ldx #$0F					; DOS II+/D ParamStr
   152 22EF BD 40 03 9D 03 26 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   153
   154 22F8 E8				inx						; X = 0
   155 22F9 86 80			stx bp						; BP = 0
   156
   157 22FB 8E 08 D2			stx audctl					; reset POKEY
   158 22FE 8E 18 D2			stx audctl+$10
   159 2301 A9 03			lda #3
   160 2303 8D 0F D2			sta skctl
   161 2306 8D 1F D2			sta skctl+$10
   162
   163 2309 CA				dex						; X = 255
   164
   165 230A				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: pokeymaxtest.a65]
   166
   167 230A			.local	MAIN						; PROCEDURE
   168
   169 230A 4C A7 23			jmp l_0206
   170
   171 				; ------------------------------------------------------------
   172
   173 230D			.local	SYSTEM						; UNIT
   174
   175 230D			.local	MOVE_0242					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   176
   177 					.MACRO m@INLINE
   178 				
   179 				; -------------------  ASM Block 00000027  -------------------
   180 				
   181 					jsr @move
   182 				
   183 					.ENDM
   184
   185 				; ------------------------------------------------------------
   186
   187 = 0088			SOURCE	= :EDX
   188 = 008C			DEST	= :ECX
   189 = 0084			COUNT	= :EAX
   190 230D			@exit
   191 				.endl
   192
   193 				; ------------------------------------------------------------
   194
   195 = 0101			__PORTB_BANKS	= $0101
   196 = 0648			M_PI_2	= $0648
   197 = 0192			D_PI_2	= $0192
   198 = 0004			D_PI_180	= $04
   199 = 0000			MGTIA	= $00
   200 = 0080			MVBXE	= $80
   201 = 0000			VBXE_XDLADR	= $00
   202 = 00E0			VBXE_BCBTMP	= $E0
   203 = 0100			VBXE_BCBADR	= $0100
   204 = 1000			VBXE_MAPADR	= $1000
   205 = 1000			VBXE_CHBASE	= $1000
   206 = 5000			VBXE_OVRADR	= $5000
   207 = B000			VBXE_WINDOW	= $B000
   208 = 0000			IDLI	= $00
   209 = 0001			IVBL	= $01
   210 = 0002			ITIM1	= $02
   211 = 0003			ITIM2	= $03
   212 = 0004			ITIM4	= $04
   213 = 00FE			CH_DELCHR	= $FE
   214 = 009B			CH_ENTER	= $9B
   215 = 001B			CH_ESC	= $1B
   216 = 001C			CH_CURS_UP	= $1C
   217 = 001D			CH_CURS_DOWN	= $1D
   218 = 001E			CH_CURS_LEFT	= $1E
   219 = 001F			CH_CURS_RIGHT	= $1F
   220 = 007F			CH_TAB	= $7F
   221 = 009B			CH_EOL	= $9B
   222 = 007D			CH_CLR	= $7D
   223 = 00FD			CH_BELL	= $FD
   224 = 007E			CH_DEL	= $7E
   225 = 009C			CH_DELLINE	= $9C
   226 = 009D			CH_INSLINE	= $9D
   227 = 0000			PAL_PMCOLOR0	= $00
   228 = 0001			PAL_PMCOLOR1	= $01
   229 = 0002			PAL_PMCOLOR2	= $02
   230 = 0003			PAL_PMCOLOR3	= $03
   231 = 0004			PAL_COLOR0	= $04
   232 = 0005			PAL_COLOR1	= $05
   233 = 0006			PAL_COLOR2	= $06
   234 = 0007			PAL_COLOR3	= $07
   235 = 0008			PAL_COLBAK	= $08
   236 = 0000			COLOR_BLACK	= $00
   237 = 000E			COLOR_WHITE	= $0E
   238 = 0032			COLOR_RED	= $32
   239 = 0096			COLOR_CYAN	= $96
   240 = 0068			COLOR_VIOLET	= $68
   241 = 00C4			COLOR_GREEN	= $C4
   242 = 0074			COLOR_BLUE	= $74
   243 = 00EE			COLOR_YELLOW	= $EE
   244 = 0028			COLOR_ORANGE	= $28
   245 = 00E4			COLOR_BROWN	= $E4
   246 = 003C			COLOR_LIGHTRED	= $3C
   247 = 0004			COLOR_GRAY1	= $04
   248 = 0006			COLOR_GRAY2	= $06
   249 = 000A			COLOR_GRAY3	= $0A
   250 = 00CC			COLOR_LIGHTGREEN	= $CC
   251 = 007C			COLOR_LIGHTBLUE	= $7C
   252 = 0004			FMOPENREAD	= $04
   253 = 0008			FMOPENWRITE	= $08
   254 = 0009			FMOPENAPPEND	= $09
   255 = 000C			FMOPENREADWRITE	= $0C
   256 = 261C			SCREENWIDTH	= DATAORIGIN+$0000
   257 = 261E			SCREENHEIGHT	= DATAORIGIN+$0002
   258 = 2620			DATESEPARATOR	= DATAORIGIN+$0004
   259 = D20A			RND	= $D20A
   260 = 02C0			adr.PALETTE	= $02C0
   261 230D			.var PALETTE	= adr.PALETTE .word
   262 = D012			adr.HPALETTE	= $D012
   263 230D			.var HPALETTE	= adr.HPALETTE .word
   264 = 2621			FILEMODE	= DATAORIGIN+$0005
   265 = 2622			GRAPHMODE	= DATAORIGIN+$0006
   266 = 2623			IORESULT	= DATAORIGIN+$0007
   267 = 2624			EOLN	= DATAORIGIN+$0008
   268 = 2625			RNDSEED	= DATAORIGIN+$0009
   269
   270 = 230D C0 02		PALETTE
   270 = 230F 12 D0		HPALETTE
   270 				.endl							; UNIT SYSTEM
   271
   272 				; ------------------------------------------------------------
   273
   274 2311			.local	ATARI						; UNIT
   275
   276 				; ------------------------------------------------------------
   277
   278 = 0010			IRQENS	= $10
   279 = 0012			RTCLOK	= $12
   280 = 0012			RTCLOK1	= $12
   281 = 0013			RTCLOK2	= $13
   282 = 0014			RTCLOK3	= $14
   283 = 004D			ATRACT	= $4D
   284 = 0052			LMARGIN	= $52
   285 = 0053			RMARGIN	= $53
   286 = 0054			ROWCRS	= $54
   287 = 0055			COLCRS	= $55
   288 = 0057			DINDEX	= $57
   289 = 0058			SAVMSC	= $58
   290 = 0062			PALNTS	= $62
   291 = 006A			RAMTOP	= $6A
   292 = 0200			VDSLST	= $0200
   293 = 0230			SDLSTL	= $0230
   294 = 0290			TXTROW	= $0290
   295 = 0291			TXTCOL	= $0291
   296 = 0293			TINDEX	= $0293
   297 = 0294			TXTMSC	= $0294
   298 = 022F			SDMCTL	= $022F
   299 = 026F			GPRIOR	= $026F
   300 = 02F0			CRSINH	= $02F0
   301 = 02F3			CHACT	= $02F3
   302 = 02F4			CHBAS	= $02F4
   303 = 02FC			CH	= $02FC
   304 = 02FD			FILDAT	= $02FD
   305 = 02C0			PCOLR0	= $02C0
   306 = 02C1			PCOLR1	= $02C1
   307 = 02C2			PCOLR2	= $02C2
   308 = 02C3			PCOLR3	= $02C3
   309 = 02C4			COLOR0	= $02C4
   310 = 02C5			COLOR1	= $02C5
   311 = 02C6			COLOR2	= $02C6
   312 = 02C7			COLOR3	= $02C7
   313 = 02C8			COLOR4	= $02C8
   314 = 02C8			COLBAKS	= $02C8
   315 = D000			HPOSP0	= $D000
   316 = D001			HPOSP1	= $D001
   317 = D002			HPOSP2	= $D002
   318 = D003			HPOSP3	= $D003
   319 = D004			HPOSM0	= $D004
   320 = D005			HPOSM1	= $D005
   321 = D006			HPOSM2	= $D006
   322 = D007			HPOSM3	= $D007
   323 = D008			SIZEP0	= $D008
   324 = D009			SIZEP1	= $D009
   325 = D00A			SIZEP2	= $D00A
   326 = D00B			SIZEP3	= $D00B
   327 = D00C			SIZEM	= $D00C
   328 = D00D			GRAFP0	= $D00D
   329 = D00E			GRAFP1	= $D00E
   330 = D00F			GRAFP2	= $D00F
   331 = D010			GRAFP3	= $D010
   332 = D011			GRAFM	= $D011
   333 = D004			P0PF	= $D004
   334 = D014			PAL	= $D014
   335 = D013			TRIG3	= $D013
   336 = D012			COLPM0	= $D012
   337 = D013			COLPM1	= $D013
   338 = D014			COLPM2	= $D014
   339 = D015			COLPM3	= $D015
   340 = D016			COLPF0	= $D016
   341 = D017			COLPF1	= $D017
   342 = D018			COLPF2	= $D018
   343 = D019			COLPF3	= $D019
   344 = D01A			COLBK	= $D01A
   345 = D01B			PRIOR	= $D01B
   346 = D01D			GRACTL	= $D01D
   347 = D01E			HITCLR	= $D01E
   348 = D01F			CONSOL	= $D01F
   349 = D200			AUDF1	= $D200
   350 = D201			AUDC1	= $D201
   351 = D202			AUDF2	= $D202
   352 = D203			AUDC2	= $D203
   353 = D204			AUDF3	= $D204
   354 = D205			AUDC3	= $D205
   355 = D206			AUDF4	= $D206
   356 = D207			AUDC4	= $D207
   357 = D208			AUDCTL	= $D208
   358 = D209			KBCODE	= $D209
   359 = D20E			IRQEN	= $D20E
   360 = D20F			SKSTAT	= $D20F
   361 = D300			PORTA	= $D300
   362 = D301			PORTB	= $D301
   363 = D302			PACTL	= $D302
   364 = D400			DMACTL	= $D400
   365 = D401			CHACTL	= $D401
   366 = D402			DLISTL	= $D402
   367 = D404			HSCROL	= $D404
   368 = D405			VSCROL	= $D405
   369 = D407			PMBASE	= $D407
   370 = D409			CHBASE	= $D409
   371 = D40A			WSYNC	= $D40A
   372 = D40B			VCOUNT	= $D40B
   373 = D40C			PENH	= $D40C
   374 = D40D			PENV	= $D40D
   375 = D40E			NMIEN	= $D40E
   376 = FFFA			NMIVEC	= $FFFA
   377 = FFFC			RESETVEC	= $FFFC
   378 = FFFE			IRQVEC	= $FFFE
   379
   380 				.endl							; UNIT ATARI
   381
   382 				; ------------------------------------------------------------
   383
   384 2311			.local	CRT						; UNIT
   385
   386 				; ------------------------------------------------------------
   387
   388 = 2627			TEXTATTR	= DATAORIGIN+$000B
   389 = D01F			CONSOL	= $D01F
   390 = 0000			CN_START_SELECT_OPTION	= $00
   391 = 0001			CN_SELECT_OPTION	= $01
   392 = 0002			CN_START_OPTION	= $02
   393 = 0003			CN_OPTION	= $03
   394 = 0004			CN_START_SELECT	= $04
   395 = 0005			CN_SELECT	= $05
   396 = 0006			CN_START	= $06
   397 = 0007			CN_NONE	= $07
   398 = 0000			BW40	= $00
   399 = 0001			CO40	= $01
   400 = 0002			BW80	= $02
   401 = 0003			CO80	= $03
   402 = 0007			MONO	= $07
   403 = 0001			C40	= $01
   404 = 0003			C80	= $03
   405 = 0000			BLACK	= $00
   406 = 000F			WHITE	= $0F
   407 = 0026			RED	= $26
   408 = 00AC			CYAN	= $AC
   409 = 0048			PURPLE	= $48
   410 = 00B6			GREEN	= $B6
   411 = 0086			BLUE	= $86
   412 = 00DC			YELLOW	= $DC
   413 = 0018			ORANGE	= $18
   414 = 00F4			BROWN	= $F4
   415 = 002A			LIGHT_RED	= $2A
   416 = 0004			DARK_GREY	= $04
   417 = 0008			GREY	= $08
   418 = 00BC			LIGHT_GREEN	= $BC
   419 = 009A			LIGHT_BLUE	= $9A
   420 = 000C			LIGHT_GREY	= $0C
   421 = 0080			BLINK	= $80
   422
   423 				.endl							; UNIT CRT
   424
   425 				; ------------------------------------------------------------
   426
   427 2311			.local	POKEYMAXCONF					; UNIT
   428
   429 2311			.local	DETECTPOKEYMAX					; FUNCTION
   430
   431 				; optimize OK (POKEYMAXCONF), line = 405
   432
   433 2311			?volatile:
   434 2311 A0 01			ldy #1
   435 2313 AD 0C D2			lda PMCID
   436 2316 C9 01			cmp #$01
   437 2318 F0 01			beq @+
   438 231A 88				dey
   439 				@
   440 231B 98				tya
   441 231C 8D 28 26			sta RESULT
   442 231F			@exit
   443
   444 				; ------------------------------------------------------------
   445
   446 = 2628			RESULT	= DATAORIGIN+$000C
   447 231F 60				rts						; ret
   448 				.endl
   449
   450 2320			.local	GETVERSION					; FUNCTION
   451
   452 				; optimize OK (POKEYMAXCONF), line = 413
   453
   454 2320 A9 3F			lda #$3F
   455 2322 8D 0C D2			sta PMCCONFIG
   456
   457 				; optimize OK (POKEYMAXCONF), line = 414
   458
   459 2325 AC 29 26 84 82 AC + 	mwy RESULT :bp2
   460 232F A0 00			ldy #$00
   461 2331 A9 08			lda #$08
   462 2333 91 82			sta (:bp2),y
   463
   464 				; optimize OK (POKEYMAXCONF), line = 415
   465
   466 2335 A9 01			lda #$01
   467 2337 8D 2B 26			sta I
   468
   469 233A			l_029D
   470 				; --- ForToDoCondition
   471 233A AD 2B 26			lda I
   472 233D C9 09			cmp #$09
   473 233F B0 1E			jcs l_02AB
   474
   475 				; optimize OK (POKEYMAXCONF), line = 417
   476
   477 2341 AC 2B 26			ldy I
   478 2344 88				dey
   479 2345 8C 14 D2			sty PMCVERSIONLOC
   480
   481 				; optimize OK (POKEYMAXCONF), line = 418
   482
   483 2348			?volatile:
   484 2348 AC 29 26 84 82 AC + 	mwy RESULT :bp2
   485 2352 AC 2B 26			ldy I
   486 2355 AD 14 D2			lda PMCVERSION
   487 2358 91 82			sta (:bp2),y
   488
   489 				; --- ForToDoEpilog
   490 235A EE 2B 26			inc I
   491 235D D0 DB			jne l_029D
   492 235F			l_02AB
   493
   494 				; optimize OK (POKEYMAXCONF), line = 420
   495
   496 235F A9 00			lda #$00
   497 2361 8D 0C D2			sta PMCCONFIG
   498 2364			@exit
   499
   500 				; ------------------------------------------------------------
   501
   502 = 2629			RESULT	= DATAORIGIN+$000D
   503 = 262B			I	= DATAORIGIN+$000F
   504
   505 = 262B			@VarData	= I
   506 = 0001			@VarDataSize	= 1
   507
   508 2364 60				rts						; ret
   509 				.endl
   510
   511 2365			.local	FETCHCONFIGURATION				; PROCEDURE
   512
   513 				; optimize OK (POKEYMAXCONF), line = 425
   514
   515 2365 A9 3F			lda #$3F
   516 2367 8D 0C D2			sta PMCCONFIG
   517
   518 				; optimize OK (POKEYMAXCONF), line = 426
   519
   520 236A AD 8F 23			lda LIFECONFIG
   521 236D 85 88			sta SYSTEM.MOVE_0242.SOURCE
   522 236F AD 90 23			lda LIFECONFIG+1
   523 2372 85 89			sta SYSTEM.MOVE_0242.SOURCE+1
   524 2374 AD 2C 26			lda _CONFIG
   525 2377 85 8C			sta SYSTEM.MOVE_0242.DEST
   526 2379 AD 2D 26			lda _CONFIG+1
   527 237C 85 8D			sta SYSTEM.MOVE_0242.DEST+1
   528 237E A9 0F			lda #$0F
   529 2380 85 84			sta SYSTEM.MOVE_0242.COUNT
   530 2382 A9 00			lda #$00
   531 2384 85 85			sta SYSTEM.MOVE_0242.COUNT+1
   532 2386				.local +MAIN.SYSTEM.MOVE_0242
   533 2386				m@INLINE
Macro: MAIN.SYSTEM.MOVE_0242.M@INLINE [Source: pokeymaxtest.a65]
     4 2386 20 3D 22			jsr @move
   534 					.endl
   535
   536 				; optimize OK (POKEYMAXCONF), line = 427
   537
   538 2389 A9 00			lda #$00
   539 238B 8D 0C D2			sta PMCCONFIG
   540
   541 				; ------------------------------------------------------------
   542
   543 = 262C			_CONFIG	= DATAORIGIN+$0010
   544 = 261C			_CONFIG.MODE	= DATAORIGIN+$0000
   545 = 261D			_CONFIG.CAPABILITY	= DATAORIGIN+$0001
   546 = 261E			_CONFIG.POSTDIVIDE	= DATAORIGIN+$0002
   547 = 261F			_CONFIG.GTIAEN	= DATAORIGIN+$0003
   548 = 2620			_CONFIG.PSGMODE	= DATAORIGIN+$0004
   549 = 2621			_CONFIG.SIDMODE	= DATAORIGIN+$0005
   550 = 2622			_CONFIG.RESTRICT	= DATAORIGIN+$0006
   551 = 2623			_CONFIG._RESERVED	= DATAORIGIN+$0007
   552 = 2626			_CONFIG._FLASH	= DATAORIGIN+$000A
   553
   554 = 262C			@VarData	= _CONFIG
   555 = 0002			@VarDataSize	= 2
   556
   557 238E			@exit
   558 					.ifdef @new
   559 					lda <@VarData
   560 					sta :ztmp
   561 					lda >@VarData
   562 					ldy #@VarDataSize-1
   563 					jmp @FreeMem
   564 					els
   565 238E 60				rts						; ret
   566 					eif
   567 				.endl
   568
   569 				; ------------------------------------------------------------
   570
   571 = 0020			PMC_PAL	= $20
   572 = 0010			PMC_MONODET	= $10
   573 = 0008			PMC_IRQEN	= $08
   574 = 0004			PMC_CHANNELMODE	= $04
   575 = 0001			PMC_SATURATE	= $01
   576 = 0040			PMC_FLASH	= $40
   577 = 0020			PMC_SAMPLE	= $20
   578 = 0010			PMC_COVOX	= $10
   579 = 0008			PMC_PSG	= $08
   580 = 0004			PMC_SID	= $04
   581 = 0003			PMC_POKEYS	= $03
   582 = 0000			PMC_POKEY_MONO	= $00
   583 = 0001			PMC_POKEY_STEREO	= $01
   584 = 0002			PMC_POKEY_QUAD	= $02
   585 = 0003			PMC_POSTDIVCH0	= $03
   586 = 0000			PMC_POSTDIV0_1	= $00
   587 = 0001			PMC_POSTDIV0_2	= $01
   588 = 0002			PMC_POSTDIV0_4	= $02
   589 = 0003			PMC_POSTDIV0_8	= $03
   590 = 000C			PMC_POSTDIVCH1	= $0C
   591 = 0000			PMC_POSTDIV1_1	= $00
   592 = 0004			PMC_POSTDIV1_2	= $04
   593 = 0008			PMC_POSTDIV1_4	= $08
   594 = 000C			PMC_POSTDIV1_8	= $0C
   595 = 0030			PMC_POSTDIVCH2	= $30
   596 = 0000			PMC_POSTDIV2_1	= $00
   597 = 0010			PMC_POSTDIV2_2	= $10
   598 = 0020			PMC_POSTDIV2_4	= $20
   599 = 0030			PMC_POSTDIV2_8	= $30
   600 = 00C0			PMC_POSTDIVCH3	= $C0
   601 = 0000			PMC_POSTDIV3_1	= $00
   602 = 0040			PMC_POSTDIV3_2	= $40
   603 = 0080			PMC_POSTDIV3_4	= $80
   604 = 00C0			PMC_POSTDIV3_8	= $C0
   605 = 000F			PMC_GTIAEN	= $0F
   606 = 0001			PMC_GTIA0	= $01
   607 = 0002			PMC_GTIA1	= $02
   608 = 0004			PMC_GTIA2	= $04
   609 = 0008			PMC_GTIA3	= $08
   610 = 0060			PSG_VOLP	= $60
   611 = 0000			PSG_LOGVOL	= $00
   612 = 01100000		PSG_LINVOL	= $1100000
   613 = 0010			PSG_ENV	= $10
   614 = 0010			PSG_ENV16	= $10
   615 = 0000			PSG_ENV32	= $00
   616 = 000C			PSG_STEREO	= $0C
   617 = 0000			PSG_MONO	= $00
   618 = 0100			PSG_ABBC	= $0100
   619 = 1000			PSG_ACBC	= $1000
   620 = 1100			PSG_CLCR	= $1100
   621 = 0003			PSG_FREQ	= $03
   622 = 0000			PSG_2MHZ	= $00
   623 = 0001			PSG_1MHZ	= $01
   624 = 0002			PSG_1_7MHZ	= $02
   625 = 0001			SID_1_CHIPTYPE	= $01
   626 = 0010			SID_2_CHIPTYPE	= $10
   627 = 0002			SID_1_DIGIFIX	= $02
   628 = 0020			SID_2_DIGIFIX	= $20
   629 = 0010			PMR_SAMPLE	= $10
   630 = 0008			PMR_PSG	= $08
   631 = 0004			PMR_SID	= $04
   632 = 0003			PMR_POKEYS	= $03
   633 = 0000			PMR_POKEY_MONO	= $00
   634 = 0001			PMR_POKEY_STERO	= $01
   635 = 0002			PMR_POKEY_QUAD	= $02
   636 = 003F			PMC_CFGEN	= $3F
   637 = 0004			FLASH_CFG	= $04
   638 = 0000			FLASH_FIRMWARE	= $00
   639 = 10000000		FLASH_VALID	= $10000000
   640 = 0002			FLASH_REQ	= $02
   641 = 0001			FLASH_RW	= $01
   642 = 0001			FLASH_READ	= $01
   643 = 0000			FLASH_WRITE	= $00
   644 = 0038			FLASH_A14_16	= $38
   645 = 00FF			FLASH_A6_13	= $FF
   646 = 00FC			FLASH_A0_5	= $FC
   647 = 0003			FLASH_WIN	= $03
   648 = D20C			PMCID	= $D20C
   649 = D20C			PMCCONFIG	= $D20C
   650 = D214			PMCVERSION	= $D214
   651 = D214			PMCVERSIONLOC	= $D214
   652 = D21B			PMCFLASHOP	= $D21B
   653 = D21D			PMCFLASHADL	= $D21D
   654 = D21E			PMCFLASHADH	= $D21E
   655 = D21F			PMCFLASHDAT	= $D21F
   656 = D210			adr.LIFECONFIG	= $D210
   657 238F			.var LIFECONFIG	= adr.LIFECONFIG .word
   658 = D210			LIFECONFIG.MODE	= $D210
   659 = D211			LIFECONFIG.CAPABILITY	= $D211
   660 = D212			LIFECONFIG.POSTDIVIDE	= $D212
   661 = D213			LIFECONFIG.GTIAEN	= $D213
   662 = D214			LIFECONFIG.PSGMODE	= $D214
   663 = D215			LIFECONFIG.SIDMODE	= $D215
   664 = D216			LIFECONFIG.RESTRICT	= $D216
   665 = D217			adr.LIFECONFIG._RESERVED	= $D217
   666 238F			.var LIFECONFIG._RESERVED	= adr.LIFECONFIG._RESERVED .word
   667 = D219			adr.LIFECONFIG._FLASH	= $D219
   668 238F			.var LIFECONFIG._FLASH	= adr.LIFECONFIG._FLASH .word
   669
   670 = 238F 10 D2		LIFECONFIG
   670 = 2391 17 D2		LIFECONFIG._RESERVED
   670 = 2393 19 D2		LIFECONFIG._FLASH
   670 				.endl							; UNIT POKEYMAXCONF
   671
   672 2395			.local	WAIT4KEY					; PROCEDURE
   673
   674 				; optimize OK (pokeymaxtest.pas), line = 10
   675
   676 2395 A9 FF			lda #$FF
   677 2397 8D FC 02			sta KEYB
   678
   679 				; --- RepeatUntilProlog
   680 239A			l_02EA
   681 239A AD FC 02			lda KEYB
   682 239D C9 FF			cmp #$FF
   683 239F F0 F9			jeq l_02EA
   684 23A1 A9 FF			lda #$FF
   685 23A3 8D FC 02			sta KEYB
   686 23A6			@exit
   687 					.ifdef @new
   688 					lda <@VarData
   689 					sta :ztmp
   690 					lda >@VarData
   691 					ldy #@VarDataSize-1
   692 					jmp @FreeMem
   693 					els
   694 23A6 60				rts						; ret
   695 					eif
   696 				.endl
   697 23A7			l_0206
   698
   699 				; optimize FAIL ('POKEYMAXCONF.DETECTPOKEYMAX', pokeymaxtest.pas), line = 14
   700
   701 23A7 20 11 23			jsr POKEYMAXCONF.DETECTPOKEYMAX
   702 23AA AD 28 26			lda POKEYMAXCONF.DETECTPOKEYMAX.RESULT
   703 23AD D0 12			jne l_0309
   704
   705 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 16
   706
   707 					@printSTRING #CODEORIGIN+$0000
   707 				 LDY> CODEORIGIN+$0000\ LDA< CODEORIGIN+$0000\ JSR @PRINTSTRING
   707 23AF A0 20		 LDY> CODEORIGIN+$0000
   707 23B1 A9 00		 LDA< CODEORIGIN+$0000
   707 23B3 20 B0 22		 JSR @PRINTSTRING
   708 23B6 20 A2 22			@printEOL
   709
   710 				; optimize FAIL ('WAIT4KEY', pokeymaxtest.pas), line = 17
   711
   712 23B9 20 95 23			jsr WAIT4KEY
   713 23BC A9 00			lda #$00
   714 23BE 4C FD 25			jmp @halt
   715 23C1			l_0309
   716
   717 				; optimize FAIL ('POKEYMAXCONF.GETVERSION', pokeymaxtest.pas), line = 20
   718
   719 23C1 20 20 23			jsr POKEYMAXCONF.GETVERSION
   720 23C4 E8				inx
   721 23C5 AD 29 26			lda POKEYMAXCONF.GETVERSION.RESULT
   722 23C8 85 88			sta @move.src
   723 23CA AD 2A 26			lda POKEYMAXCONF.GETVERSION.RESULT+1
   724 23CD 85 89			sta @move.src+1
   725 					@moveSTRING PMVER #9
   725 				 MWA PMVER @MOVE.DST\ MWA #9 @MOVE.CNT\ JSR @MOVESTRING
   725 23CF AD 19 26 85 8C AD +  MWA PMVER @MOVE.DST
   725 23D9 A9 09 85 84 A9 00 +  MWA #9 @MOVE.CNT
   725 23E1 20 92 22		 JSR @MOVESTRING
   726 23E4 CA				dex
   727
   728 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 21
   729
   730 					@printSTRING #CODEORIGIN+$001E
   730 				 LDY> CODEORIGIN+$001E\ LDA< CODEORIGIN+$001E\ JSR @PRINTSTRING
   730 23E5 A0 20		 LDY> CODEORIGIN+$001E
   730 23E7 A9 1E		 LDA< CODEORIGIN+$001E
   730 23E9 20 B0 22		 JSR @PRINTSTRING
   731 					@printSTRING PMVER
   731 				 LDY PMVER+1\ LDA PMVER\ JSR @PRINTSTRING
   731 23EC AC 1A 26		 LDY PMVER+1
   731 23EF AD 19 26		 LDA PMVER
   731 23F2 20 B0 22		 JSR @PRINTSTRING
   732 23F5 20 A2 22			@printEOL
   733
   734 				; optimize OK (pokeymaxtest.pas), line = 22
   735
   736 23F8 AD 13 26			lda CONFIG
   737 23FB 8D 2C 26			sta POKEYMAXCONF.FETCHCONFIGURATION._CONFIG
   738 23FE AD 14 26			lda CONFIG+1
   739 2401 8D 2D 26			sta POKEYMAXCONF.FETCHCONFIGURATION._CONFIG+1
   740 2404 20 65 23			jsr POKEYMAXCONF.FETCHCONFIGURATION
   741
   742 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 23
   743
   744 					@printSTRING #CODEORIGIN+$002E
   744 				 LDY> CODEORIGIN+$002E\ LDA< CODEORIGIN+$002E\ JSR @PRINTSTRING
   744 2407 A0 20		 LDY> CODEORIGIN+$002E
   744 2409 A9 2E		 LDA< CODEORIGIN+$002E
   744 240B 20 B0 22		 JSR @PRINTSTRING
   745 240E 20 A2 22			@printEOL
   746
   747 				; optimize OK (pokeymaxtest.pas), line = 24
   748
   749 2411 AD 2F 26			lda CONFIG.CAPABILITY
   750 2414 29 40			and #$40
   751 2416 F0 0A			jeq l_0338
   752
   753 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 25
   754
   755 					@printSTRING #CODEORIGIN+$003B
   755 				 LDY> CODEORIGIN+$003B\ LDA< CODEORIGIN+$003B\ JSR @PRINTSTRING
   755 2418 A0 20		 LDY> CODEORIGIN+$003B
   755 241A A9 3B		 LDA< CODEORIGIN+$003B
   755 241C 20 B0 22		 JSR @PRINTSTRING
   756 241F 20 A2 22			@printEOL
   757 2422			l_0338
   758
   759 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 27
   760
   761 					@printSTRING #CODEORIGIN+$0067
   761 				 LDY> CODEORIGIN+$0067\ LDA< CODEORIGIN+$0067\ JSR @PRINTSTRING
   761 2422 A0 20		 LDY> CODEORIGIN+$0067
   761 2424 A9 67		 LDA< CODEORIGIN+$0067
   761 2426 20 B0 22		 JSR @PRINTSTRING
   762
   763 				; optimize OK (pokeymaxtest.pas), line = 28
   764
   765 2429 AD 2F 26			lda CONFIG.CAPABILITY
   766 242C 29 03			and #$03
   767 242E 8D 46 26			sta @CASETMP_0003
   768 2431 C9 00			cmp #$00
   769 2433 D0 0D			jne l_0350
   770 				@
   771
   772 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 29
   773
   774 					@printSTRING #CODEORIGIN+$0070
   774 				 LDY> CODEORIGIN+$0070\ LDA< CODEORIGIN+$0070\ JSR @PRINTSTRING
   774 2435 A0 20		 LDY> CODEORIGIN+$0070
   774 2437 A9 70		 LDA< CODEORIGIN+$0070
   774 2439 20 B0 22		 JSR @PRINTSTRING
   775 243C 20 A2 22			@printEOL
   776
   777 243F 4C 61 24			jmp a_0003
   778 2442			l_0350
   779 2442 C9 01			cmp #$01
   780 2444 D0 0D			jne l_035C
   781 				@
   782
   783 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 30
   784
   785 					@printSTRING #CODEORIGIN+$0080
   785 				 LDY> CODEORIGIN+$0080\ LDA< CODEORIGIN+$0080\ JSR @PRINTSTRING
   785 2446 A0 20		 LDY> CODEORIGIN+$0080
   785 2448 A9 80		 LDA< CODEORIGIN+$0080
   785 244A 20 B0 22		 JSR @PRINTSTRING
   786 244D 20 A2 22			@printEOL
   787
   788 2450 4C 61 24			jmp a_0003
   789 2453			l_035C
   790 2453 C9 02			cmp #$02
   791 2455 D0 0A			jne l_0368
   792 				@
   793
   794 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 31
   795
   796 					@printSTRING #CODEORIGIN+$0097
   796 				 LDY> CODEORIGIN+$0097\ LDA< CODEORIGIN+$0097\ JSR @PRINTSTRING
   796 2457 A0 20		 LDY> CODEORIGIN+$0097
   796 2459 A9 97		 LDA< CODEORIGIN+$0097
   796 245B 20 B0 22		 JSR @PRINTSTRING
   797 245E 20 A2 22			@printEOL
   798
   799 2461			l_0368
   800 2461			a_0003
   801
   802 				; optimize OK (pokeymaxtest.pas), line = 34
   803
   804 2461 AD 2F 26			lda CONFIG.CAPABILITY
   805 2464 29 04			and #$04
   806 2466 D0 03 4C 03 25		jeq l_0388
   807
   808 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 36
   809
   810 					@printSTRING #CODEORIGIN+$00B0
   810 				 LDY> CODEORIGIN+$00B0\ LDA< CODEORIGIN+$00B0\ JSR @PRINTSTRING
   810 246B A0 20		 LDY> CODEORIGIN+$00B0
   810 246D A9 B0		 LDA< CODEORIGIN+$00B0
   810 246F 20 B0 22		 JSR @PRINTSTRING
   811 2472 20 A2 22			@printEOL
   812
   813 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 37
   814
   815 					@printSTRING #CODEORIGIN+$00BF
   815 				 LDY> CODEORIGIN+$00BF\ LDA< CODEORIGIN+$00BF\ JSR @PRINTSTRING
   815 2475 A0 20		 LDY> CODEORIGIN+$00BF
   815 2477 A9 BF		 LDA< CODEORIGIN+$00BF
   815 2479 20 B0 22		 JSR @PRINTSTRING
   816
   817 				; optimize OK (pokeymaxtest.pas), line = 38
   818
   819 247C AD 33 26			lda CONFIG.SIDMODE
   820 247F 29 01			and #$01
   821 2481 8D 47 26			sta @CASETMP_0004
   822 2484 C9 00			cmp #$00
   823 2486 D0 0A			jne l_039E
   824 				@
   825
   826 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 39
   827
   828 					@printSTRING #CODEORIGIN+$00C6
   828 				 LDY> CODEORIGIN+$00C6\ LDA< CODEORIGIN+$00C6\ JSR @PRINTSTRING
   828 2488 A0 20		 LDY> CODEORIGIN+$00C6
   828 248A A9 C6		 LDA< CODEORIGIN+$00C6
   828 248C 20 B0 22		 JSR @PRINTSTRING
   829
   830 248F 4C 99 24			jmp a_0004
   831 2492			l_039E
   832
   833 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 41
   834
   835 					@printSTRING #CODEORIGIN+$00DD
   835 				 LDY> CODEORIGIN+$00DD\ LDA< CODEORIGIN+$00DD\ JSR @PRINTSTRING
   835 2492 A0 20		 LDY> CODEORIGIN+$00DD
   835 2494 A9 DD		 LDA< CODEORIGIN+$00DD
   835 2496 20 B0 22		 JSR @PRINTSTRING
   836 2499			a_0004
   837
   838 				; optimize OK (pokeymaxtest.pas), line = 43
   839
   840 2499 AD 33 26			lda CONFIG.SIDMODE
   841 249C 29 02			and #$02
   842 249E 8D 48 26			sta @CASETMP_0005
   843 24A1 C9 00			cmp #$00
   844 24A3 D0 0D			jne l_03B8
   845 				@
   846
   847 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 44
   848
   849 					@printSTRING #CODEORIGIN+$00E4
   849 				 LDY> CODEORIGIN+$00E4\ LDA< CODEORIGIN+$00E4\ JSR @PRINTSTRING
   849 24A5 A0 20		 LDY> CODEORIGIN+$00E4
   849 24A7 A9 E4		 LDA< CODEORIGIN+$00E4
   849 24A9 20 B0 22		 JSR @PRINTSTRING
   850 24AC 20 A2 22			@printEOL
   851
   852 24AF 4C BC 24			jmp a_0005
   853 24B2			l_03B8
   854
   855 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 46
   856
   857 					@printSTRING #CODEORIGIN+$00F5
   857 				 LDY> CODEORIGIN+$00F5\ LDA< CODEORIGIN+$00F5\ JSR @PRINTSTRING
   857 24B2 A0 20		 LDY> CODEORIGIN+$00F5
   857 24B4 A9 F5		 LDA< CODEORIGIN+$00F5
   857 24B6 20 B0 22		 JSR @PRINTSTRING
   858 24B9 20 A2 22			@printEOL
   859 24BC			a_0005
   860
   861 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 48
   862
   863 					@printSTRING #CODEORIGIN+$0103
   863 				 LDY> CODEORIGIN+$0103\ LDA< CODEORIGIN+$0103\ JSR @PRINTSTRING
   863 24BC A0 21		 LDY> CODEORIGIN+$0103
   863 24BE A9 03		 LDA< CODEORIGIN+$0103
   863 24C0 20 B0 22		 JSR @PRINTSTRING
   864
   865 				; optimize OK (pokeymaxtest.pas), line = 49
   866
   867 24C3 AD 33 26			lda CONFIG.SIDMODE
   868 24C6 29 10			and #$10
   869 24C8 8D 49 26			sta @CASETMP_0006
   870 24CB C9 00			cmp #$00
   871 24CD D0 0A			jne l_03D5
   872 				@
   873
   874 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 50
   875
   876 					@printSTRING #CODEORIGIN+$00C6
   876 				 LDY> CODEORIGIN+$00C6\ LDA< CODEORIGIN+$00C6\ JSR @PRINTSTRING
   876 24CF A0 20		 LDY> CODEORIGIN+$00C6
   876 24D1 A9 C6		 LDA< CODEORIGIN+$00C6
   876 24D3 20 B0 22		 JSR @PRINTSTRING
   877
   878 24D6 4C E0 24			jmp a_0006
   879 24D9			l_03D5
   880
   881 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 52
   882
   883 					@printSTRING #CODEORIGIN+$00DD
   883 				 LDY> CODEORIGIN+$00DD\ LDA< CODEORIGIN+$00DD\ JSR @PRINTSTRING
   883 24D9 A0 20		 LDY> CODEORIGIN+$00DD
   883 24DB A9 DD		 LDA< CODEORIGIN+$00DD
   883 24DD 20 B0 22		 JSR @PRINTSTRING
   884 24E0			a_0006
   885
   886 				; optimize OK (pokeymaxtest.pas), line = 54
   887
   888 24E0 AD 33 26			lda CONFIG.SIDMODE
   889 24E3 29 20			and #$20
   890 24E5 8D 4A 26			sta @CASETMP_0007
   891 24E8 C9 00			cmp #$00
   892 24EA D0 0D			jne l_03EF
   893 				@
   894
   895 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 55
   896
   897 					@printSTRING #CODEORIGIN+$00E4
   897 				 LDY> CODEORIGIN+$00E4\ LDA< CODEORIGIN+$00E4\ JSR @PRINTSTRING
   897 24EC A0 20		 LDY> CODEORIGIN+$00E4
   897 24EE A9 E4		 LDA< CODEORIGIN+$00E4
   897 24F0 20 B0 22		 JSR @PRINTSTRING
   898 24F3 20 A2 22			@printEOL
   899
   900 24F6 4C 03 25			jmp a_0007
   901 24F9			l_03EF
   902
   903 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 57
   904
   905 					@printSTRING #CODEORIGIN+$00F5
   905 				 LDY> CODEORIGIN+$00F5\ LDA< CODEORIGIN+$00F5\ JSR @PRINTSTRING
   905 24F9 A0 20		 LDY> CODEORIGIN+$00F5
   905 24FB A9 F5		 LDA< CODEORIGIN+$00F5
   905 24FD 20 B0 22		 JSR @PRINTSTRING
   906 2500 20 A2 22			@printEOL
   907 2503			a_0007
   908 2503			l_0388
   909
   910 				; optimize OK (pokeymaxtest.pas), line = 61
   911
   912 2503 AD 2F 26			lda CONFIG.CAPABILITY
   913 2506 29 08			and #$08
   914 2508 D0 03 4C D8 25		jeq l_0412
   915
   916 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 63
   917
   918 					@printSTRING #CODEORIGIN+$010A
   918 				 LDY> CODEORIGIN+$010A\ LDA< CODEORIGIN+$010A\ JSR @PRINTSTRING
   918 250D A0 21		 LDY> CODEORIGIN+$010A
   918 250F A9 0A		 LDA< CODEORIGIN+$010A
   918 2511 20 B0 22		 JSR @PRINTSTRING
   919
   920 				; optimize OK (pokeymaxtest.pas), line = 64
   921
   922 2514 AD 32 26			lda CONFIG.PSGMODE
   923 2517 29 03			and #$03
   924 2519 8D 4B 26			sta @CASETMP_0008
   925 251C C9 00			cmp #$00
   926 251E D0 0A			jne l_0425
   927 				@
   928
   929 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 65
   930
   931 					@printSTRING #CODEORIGIN+$011A
   931 				 LDY> CODEORIGIN+$011A\ LDA< CODEORIGIN+$011A\ JSR @PRINTSTRING
   931 2520 A0 21		 LDY> CODEORIGIN+$011A
   931 2522 A9 1A		 LDA< CODEORIGIN+$011A
   931 2524 20 B0 22		 JSR @PRINTSTRING
   932
   933 2527 4C 43 25			jmp a_0008
   934 252A			l_0425
   935 252A C9 01			cmp #$01
   936 252C D0 0A			jne l_0431
   937 				@
   938
   939 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 66
   940
   941 					@printSTRING #CODEORIGIN+$0128
   941 				 LDY> CODEORIGIN+$0128\ LDA< CODEORIGIN+$0128\ JSR @PRINTSTRING
   941 252E A0 21		 LDY> CODEORIGIN+$0128
   941 2530 A9 28		 LDA< CODEORIGIN+$0128
   941 2532 20 B0 22		 JSR @PRINTSTRING
   942
   943 2535 4C 43 25			jmp a_0008
   944 2538			l_0431
   945 2538 C9 02			cmp #$02
   946 253A D0 07			jne l_043D
   947 				@
   948
   949 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 67
   950
   951 					@printSTRING #CODEORIGIN+$0136
   951 				 LDY> CODEORIGIN+$0136\ LDA< CODEORIGIN+$0136\ JSR @PRINTSTRING
   951 253C A0 21		 LDY> CODEORIGIN+$0136
   951 253E A9 36		 LDA< CODEORIGIN+$0136
   951 2540 20 B0 22		 JSR @PRINTSTRING
   952
   953 2543			l_043D
   954 2543			a_0008
   955
   956 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 69
   957
   958 					@printSTRING #CODEORIGIN+$0146
   958 				 LDY> CODEORIGIN+$0146\ LDA< CODEORIGIN+$0146\ JSR @PRINTSTRING
   958 2543 A0 21		 LDY> CODEORIGIN+$0146
   958 2545 A9 46		 LDA< CODEORIGIN+$0146
   958 2547 20 B0 22		 JSR @PRINTSTRING
   959 254A 20 A2 22			@printEOL
   960
   961 				; optimize OK (pokeymaxtest.pas), line = 70
   962
   963 254D AD 32 26			lda CONFIG.PSGMODE
   964 2550 29 60			and #$60
   965 2552 8D 4C 26			sta @CASETMP_0009
   966 2555 C9 00			cmp #$00
   967 2557 D0 0A			jne l_0459
   968 				@
   969
   970 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 71
   971
   972 					@printSTRING #CODEORIGIN+$014D
   972 				 LDY> CODEORIGIN+$014D\ LDA< CODEORIGIN+$014D\ JSR @PRINTSTRING
   972 2559 A0 21		 LDY> CODEORIGIN+$014D
   972 255B A9 4D		 LDA< CODEORIGIN+$014D
   972 255D 20 B0 22		 JSR @PRINTSTRING
   973
   974 2560 4C 6E 25			jmp a_0009
   975 2563			l_0459
   976 2563 C9 00			cmp #$00
   977 2565 D0 07			jne l_0465
   978 				@
   979
   980 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 72
   981
   982 					@printSTRING #CODEORIGIN+$015B
   982 				 LDY> CODEORIGIN+$015B\ LDA< CODEORIGIN+$015B\ JSR @PRINTSTRING
   982 2567 A0 21		 LDY> CODEORIGIN+$015B
   982 2569 A9 5B		 LDA< CODEORIGIN+$015B
   982 256B 20 B0 22		 JSR @PRINTSTRING
   983
   984 256E			l_0465
   985 256E			a_0009
   986
   987 				; optimize OK (pokeymaxtest.pas), line = 74
   988
   989 256E AD 32 26			lda CONFIG.PSGMODE
   990 2571 29 10			and #$10
   991 2573 8D 4D 26			sta @CASETMP_000A
   992 2576 C9 10			cmp #$10
   993 2578 D0 0A			jne l_047D
   994 				@
   995
   996 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 75
   997
   998 					@printSTRING #CODEORIGIN+$016C
   998 				 LDY> CODEORIGIN+$016C\ LDA< CODEORIGIN+$016C\ JSR @PRINTSTRING
   998 257A A0 21		 LDY> CODEORIGIN+$016C
   998 257C A9 6C		 LDA< CODEORIGIN+$016C
   998 257E 20 B0 22		 JSR @PRINTSTRING
   999
  1000 2581 4C 8F 25			jmp a_000A
  1001 2584			l_047D
  1002 2584 C9 00			cmp #$00
  1003 2586 D0 07			jne l_0489
  1004 				@
  1005
  1006 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 76
  1007
  1008 					@printSTRING #CODEORIGIN+$0180
  1008 				 LDY> CODEORIGIN+$0180\ LDA< CODEORIGIN+$0180\ JSR @PRINTSTRING
  1008 2588 A0 21		 LDY> CODEORIGIN+$0180
  1008 258A A9 80		 LDA< CODEORIGIN+$0180
  1008 258C 20 B0 22		 JSR @PRINTSTRING
  1009
  1010 258F			l_0489
  1011 258F			a_000A
  1012
  1013 				; optimize OK (pokeymaxtest.pas), line = 78
  1014
  1015 258F AD 32 26			lda CONFIG.PSGMODE
  1016 2592 29 0C			and #$0C
  1017 2594 8D 4E 26			sta @CASETMP_000B
  1018 2597 C9 00			cmp #$00
  1019 2599 D0 0D			jne l_04A1
  1020 				@
  1021
  1022 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 79
  1023
  1024 					@printSTRING #CODEORIGIN+$0194
  1024 				 LDY> CODEORIGIN+$0194\ LDA< CODEORIGIN+$0194\ JSR @PRINTSTRING
  1024 259B A0 21		 LDY> CODEORIGIN+$0194
  1024 259D A9 94		 LDA< CODEORIGIN+$0194
  1024 259F 20 B0 22		 JSR @PRINTSTRING
  1025 25A2 20 A2 22			@printEOL
  1026
  1027 25A5 4C D8 25			jmp a_000B
  1028 25A8			l_04A1
  1029 25A8 C9 00			cmp #$00
  1030 25AA D0 0D			jne l_04AD
  1031 				@
  1032
  1033 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 80
  1034
  1035 					@printSTRING #CODEORIGIN+$01A1
  1035 				 LDY> CODEORIGIN+$01A1\ LDA< CODEORIGIN+$01A1\ JSR @PRINTSTRING
  1035 25AC A0 21		 LDY> CODEORIGIN+$01A1
  1035 25AE A9 A1		 LDA< CODEORIGIN+$01A1
  1035 25B0 20 B0 22		 JSR @PRINTSTRING
  1036 25B3 20 A2 22			@printEOL
  1037
  1038 25B6 4C D8 25			jmp a_000B
  1039 25B9			l_04AD
  1040 25B9 C9 00			cmp #$00
  1041 25BB D0 0D			jne l_04B9
  1042 				@
  1043
  1044 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 81
  1045
  1046 					@printSTRING #CODEORIGIN+$01B1
  1046 				 LDY> CODEORIGIN+$01B1\ LDA< CODEORIGIN+$01B1\ JSR @PRINTSTRING
  1046 25BD A0 21		 LDY> CODEORIGIN+$01B1
  1046 25BF A9 B1		 LDA< CODEORIGIN+$01B1
  1046 25C1 20 B0 22		 JSR @PRINTSTRING
  1047 25C4 20 A2 22			@printEOL
  1048
  1049 25C7 4C D8 25			jmp a_000B
  1050 25CA			l_04B9
  1051 25CA C9 00			cmp #$00
  1052 25CC D0 0A			jne l_04C5
  1053 				@
  1054
  1055 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 82
  1056
  1057 					@printSTRING #CODEORIGIN+$01C1
  1057 				 LDY> CODEORIGIN+$01C1\ LDA< CODEORIGIN+$01C1\ JSR @PRINTSTRING
  1057 25CE A0 21		 LDY> CODEORIGIN+$01C1
  1057 25D0 A9 C1		 LDA< CODEORIGIN+$01C1
  1057 25D2 20 B0 22		 JSR @PRINTSTRING
  1058 25D5 20 A2 22			@printEOL
  1059
  1060 25D8			l_04C5
  1061 25D8			a_000B
  1062 25D8			l_0412
  1063
  1064 				; optimize OK (pokeymaxtest.pas), line = 85
  1065
  1066 25D8 AD 2F 26			lda CONFIG.CAPABILITY
  1067 25DB 29 10			and #$10
  1068 25DD F0 0A			jeq l_04E8
  1069
  1070 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 86
  1071
  1072 					@printSTRING #CODEORIGIN+$01DA
  1072 				 LDY> CODEORIGIN+$01DA\ LDA< CODEORIGIN+$01DA\ JSR @PRINTSTRING
  1072 25DF A0 21		 LDY> CODEORIGIN+$01DA
  1072 25E1 A9 DA		 LDA< CODEORIGIN+$01DA
  1072 25E3 20 B0 22		 JSR @PRINTSTRING
  1073 25E6 20 A2 22			@printEOL
  1074 25E9			l_04E8
  1075
  1076 				; optimize OK (pokeymaxtest.pas), line = 87
  1077
  1078 25E9 AD 2F 26			lda CONFIG.CAPABILITY
  1079 25EC 29 20			and #$20
  1080 25EE F0 0A			jeq l_0504
  1081
  1082 				; optimize FAIL ('@print', pokeymaxtest.pas), line = 88
  1083
  1084 					@printSTRING #CODEORIGIN+$01EB
  1084 				 LDY> CODEORIGIN+$01EB\ LDA< CODEORIGIN+$01EB\ JSR @PRINTSTRING
  1084 25F0 A0 21		 LDY> CODEORIGIN+$01EB
  1084 25F2 A9 EB		 LDA< CODEORIGIN+$01EB
  1084 25F4 20 B0 22		 JSR @PRINTSTRING
  1085 25F7 20 A2 22			@printEOL
  1086 25FA			l_0504
  1087
  1088 				; optimize FAIL ('WAIT4KEY', pokeymaxtest.pas), line = 90
  1089
  1090 25FA 20 95 23			jsr WAIT4KEY
  1091
  1092 				; ------------------------------------------------------------
  1093
  1094 = 262E			adr.CONFIG	= DATAORIGIN+$0012	; [15] RECORD
  1095 25FD			.var CONFIG	= adr.CONFIG .word
  1096 = 262E			CONFIG.MODE	= DATAORIGIN+$0012
  1097 = 262F			CONFIG.CAPABILITY	= DATAORIGIN+$0013
  1098 = 2630			CONFIG.POSTDIVIDE	= DATAORIGIN+$0014
  1099 = 2631			CONFIG.GTIAEN	= DATAORIGIN+$0015
  1100 = 2632			CONFIG.PSGMODE	= DATAORIGIN+$0016
  1101 = 2633			CONFIG.SIDMODE	= DATAORIGIN+$0017
  1102 = 2634			CONFIG.RESTRICT	= DATAORIGIN+$0018
  1103 = 2635			adr.CONFIG._RESERVED	= [DATAORIGIN+$0019] .array [3]
  1104 25FD			.var CONFIG._RESERVED	= adr.CONFIG._RESERVED .word
  1105 = 2638			adr.CONFIG._FLASH	= [DATAORIGIN+$001C] .array [5]
  1106 25FD			.var CONFIG._FLASH	= adr.CONFIG._FLASH .word
  1107 = 263D			adr.PMVER	= [DATAORIGIN+$0021] .array [9]
  1108 25FD			.var PMVER	= adr.PMVER .word
  1109 = 02FC			KEYB	= $02FC
  1110 = 2646			@CASETMP_0003	= DATAORIGIN+$002A
  1111 = 2647			@CASETMP_0004	= DATAORIGIN+$002B
  1112 = 2648			@CASETMP_0005	= DATAORIGIN+$002C
  1113 = 2649			@CASETMP_0006	= DATAORIGIN+$002D
  1114 = 264A			@CASETMP_0007	= DATAORIGIN+$002E
  1115 = 264B			@CASETMP_0008	= DATAORIGIN+$002F
  1116 = 264C			@CASETMP_0009	= DATAORIGIN+$0030
  1117 = 264D			@CASETMP_000A	= DATAORIGIN+$0031
  1118 = 264E			@CASETMP_000B	= DATAORIGIN+$0032
  1119 25FD			@exit
  1120
  1121 25FD A2 00		@halt	ldx #$00
  1122 25FF 9A				txs
  1123 					.ifdef MAIN.@DEFINES.ROMOFF
  1124 					inc portb
  1125 					.fi
  1126
  1127 2600 A0 01			ldy #$01
  1128
  1129 2602 60				rts
  1130
  1131 				; ------------------------------------------------------------
  1132
  1133 2603 00 00 00 00 00 00 + IOCB@COPY	:16 brk
  1134
  1135 				; ------------------------------------------------------------
  1136
  1137 2613			.local	@DEFINES
  1138 2613			ATARI
  1139 				.endl
  1140
  1141 2613			.local	@RESOURCE
  1142 				.endl
  1143
  1144 = 2613 2E 26		CONFIG
  1144 = 2615 35 26		CONFIG._RESERVED
  1144 = 2617 38 26		CONFIG._FLASH
  1144 = 2619 3D 26		PMVER
  1144 				.endl							; MAIN
  1145
  1146 				; ------------------------------------------------------------
  1147 				; ------------------------------------------------------------
  1148
  1149 				.macro	UNITINITIALIZATION
  1150 				
  1151 					.ifdef MAIN.SYSTEM.@UnitInit
  1152 					jsr MAIN.SYSTEM.@UnitInit
  1153 					.fi
  1154 				
  1155 					.ifdef MAIN.ATARI.@UnitInit
  1156 					jsr MAIN.ATARI.@UnitInit
  1157 					.fi
  1158 				
  1159 					.ifdef MAIN.CRT.@UnitInit
  1160 					jsr MAIN.CRT.@UnitInit
  1161 					.fi
  1162 				
  1163 					.ifdef MAIN.POKEYMAXCONF.@UnitInit
  1164 					jsr MAIN.POKEYMAXCONF.@UnitInit
  1165 					.fi
  1166 				.endm
  1167
  1168 				; ------------------------------------------------------------
  1169
  1170 					ift .SIZEOF(MAIN.SYSTEM) > 0
  1171 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  1171 				SYSTEM: $230D..$2310
  1172 					eif
  1173
  1174 					ift .SIZEOF(MAIN.ATARI) > 0
  1175 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
  1176 					eif
  1177
  1178 					ift .SIZEOF(MAIN.CRT) > 0
  1179 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
  1180 					eif
  1181
  1182 					ift .SIZEOF(MAIN.POKEYMAXCONF) > 0
  1183 					.print 'POKEYMAXCONF: ',MAIN.POKEYMAXCONF,'..',MAIN.POKEYMAXCONF+.SIZEOF(MAIN.POKEYMAXCONF)-1
  1183 				POKEYMAXCONF: $2311..$2394
  1184 					eif
  1185
  1186 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  1186 				CODE: $2000..$2612
  1187
  1188 				; ------------------------------------------------------------
  1189
  1190 261B 00				.align $0004,$00
  1191
  1192 261C			DATAORIGIN
  1193 261C 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  1194
  1195 = 0006			VARINITSIZE	= *-DATAORIGIN
  1196 = 0033			VARDATASIZE	= 51
  1197
  1198 = 264F			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  1199
  1200 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  1200 				DATA: $261C..$264F
  1201
  1202 02E0-02E1> DF 22			run START
  1203
  1204 				; ------------------------------------------------------------
  1205
  1206 				.macro	STATICDATA
  1207 				.by  $1C $53 $6F $72 $72 $79 $2C $20  $50 $4F $4B $45 $59 $4D $61 $78  $20 $6E $6F $74 $20 $66 $6F $75
  1208 				.by  $6E $64 $20 $3B $28 $00 $0E $50  $4F $4B $45 $59 $4D $61 $78 $20  $76 $65 $72 $3A $20 $00 $0B $43
  1209 				.by  $61 $70 $61 $62 $69 $6C $69 $74  $79 $3A $00 $2A $50 $6F $73 $73  $69 $62 $6C $65 $20 $74 $6F $20
  1210 				.by  $66 $6C $61 $73 $68 $20 $66 $69  $72 $6D $77 $61 $72 $65 $20 $26  $20 $63 $6F $6E $66 $69 $67 $75
  1211 				.by  $72 $61 $74 $69 $6F $6E $00 $07  $50 $4F $4B $45 $59 $3A $20 $00  $0E $6D $6F $6E $6F $20 $28 $31
  1212 				.by  $20 $50 $4F $4B $45 $59 $29 $00  $15 $73 $74 $65 $72 $65 $6F $20  $28 $32 $20 $50 $4F $4B $45 $59
  1213 				.by  $73 $29 $20 $4C $2F $52 $00 $17  $71 $75 $61 $64 $20 $28 $34 $20  $50 $4F $4B $45 $59 $73 $29 $20
  1214 				.by  $4C $2F $52 $2F $4C $2F $52 $00  $0D $32 $78 $53 $49 $44 $20 $73  $75 $70 $70 $6F $72 $74 $00 $05
  1215 				.by  $20 $20 $23 $31 $20 $00 $15 $38  $35 $38 $30 $20 $28 $6C $69 $6E  $65 $61 $72 $20 $66 $69 $6C $74
  1216 				.by  $65 $72 $29 $20 $00 $05 $36 $35  $38 $31 $20 $00 $0F $77 $69 $74  $68 $6F $75 $74 $20 $44 $49 $47
  1217 				.by  $49 $46 $49 $58 $00 $0C $77 $69  $74 $68 $20 $44 $49 $47 $49 $46  $49 $58 $00 $05 $20 $20 $23 $32
  1218 				.by  $20 $00 $0E $32 $78 $50 $53 $47  $20 $73 $75 $70 $70 $6F $72 $74  $20 $00 $0C $40 $32 $4D $48 $7A
  1219 				.by  $20 $63 $6C $6F $63 $6B $20 $00  $0C $40 $31 $4D $48 $7A $20 $63  $6C $6F $63 $6B $20 $00 $0E $40
  1220 				.by  $31 $2E $37 $4D $48 $7A $20 $63  $6C $6F $63 $6B $20 $00 $05 $77  $69 $74 $68 $3A $00 $0C $6C $6F
  1221 				.by  $67 $20 $76 $6F $6C $75 $6D $65  $3B $20 $00 $0F $6C $69 $6E $65  $61 $72 $20 $76 $6F $6C $75 $6D
  1222 				.by  $65 $3B $20 $00 $12 $31 $36 $20  $73 $74 $65 $70 $20 $65 $6E $76  $65 $6C $6F $70 $65 $3B $20 $00
  1223 				.by  $12 $33 $32 $20 $73 $74 $65 $70  $20 $65 $6E $76 $65 $6C $6F $70  $65 $3B $20 $00 $0B $6D $6F $6E
  1224 				.by  $6F $20 $6F $75 $74 $70 $75 $74  $00 $0E $41 $2B $42 $20 $42 $2B  $43 $20 $6F $75 $74 $70 $75 $74
  1225 				.by  $00 $0E $41 $2B $43 $20 $42 $2B  $43 $20 $6F $75 $74 $70 $75 $74  $00 $17 $23 $31 $20 $74 $6F $20
  1226 				.by  $6C $65 $66 $74 $2C $20 $23 $32  $20 $74 $6F $20 $72 $69 $67 $68  $74 $00 $0F $34 $78 $43 $4F $56
  1227 				.by  $4F $58 $20 $73 $75 $70 $70 $6F  $72 $74 $00 $12 $44 $4D $41 $20  $73 $61 $6D $70 $6C $65 $20 $73
  1228 				.by  $75 $70 $70 $6F $72 $74 $00
  1229 				.endm
  1230
  1231 					end
